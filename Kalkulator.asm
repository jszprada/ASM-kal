	LJMP	START
	ORG	100H
START:
	LCALL LCD_INIT
	LCALL WAIT_KEY
	MOV R1, A; ZAPISANIE CYFRY DZIESIATEK 1 LICZBY TYMCZASOWO
	LCALL WRITE_HEX
	MOV A, R1
	MOV B, #10
	MUL AB 
	MOV R2, A; ZAPISANIE DZIESIATEK 1 LICZBY
	
	LCALL WAIT_KEY
	MOV R3, A; ZAPISANIE JEDNOSCI 1 LICZBY
	LCALL LCD_CLR
	MOV A, R1
	SWAP A
	ADD A, R3
	LCALL WRITE_HEX; WYSWIETLENIE 1 LICZBY W BCD
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR
	
	LCALL WAIT_KEY
	MOV R1, A; ZAPISANIE CYFRY DZIESIATEK 2 LICZBY TYMCZASOWO
	LCALL WRITE_HEX
	MOV A, R1
	MOV B, #10
	MUL AB
	MOV R4, A; ZAPISANIE DZIESIATEK 2 LICZBY
	
	LCALL WAIT_KEY
	MOV R5, A; ZAPISANIE JEDNOSCI 2 LICZBY
	LCALL LCD_CLR
	MOV A, R1
	SWAP A
	ADD A, R5
	LCALL WRITE_HEX; WYSWIETLENIE 2 LICZBY W BCD
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR

	MOV A, R2
	ADD A, R3
	MOV R1, A; ZAPISANIE 1 LICZBY
	PUSH ACC

	MOV A, R4
	ADD A, R5
	MOV R2, A; ZAPISANIE 2 LICZBY
	PUSH ACC

	LCALL WAIT_KEY
	PUSH ACC
	CLR A; CZYSZCZENIE AKUMULATORA

	POP ACC; POBRANIE ZE STOSU WARTOSCI KTORA DEFINIUJE OPERACJE, GDZIE: A-DOD, B-ODEJM, C-MNOZ, D-DZIEL
	CJNE A,#10,NIE_DOD ; SPRAWDŹ CZY DODAWANIE
	SJMP DODAWANIE

NIE_DOD:
	CJNE A,#11,NIE_ODEJM; SPRAWDŹ CZY ODEJMOWANIE
	SJMP ODEJMOWANIE

NIE_ODEJM:
	CJNE A,#12,NIE_MNOZ; SPRAWDŹ CZY MNOŻENIE
	SJMP MNOZENIE

NIE_MNOZ:
	CJNE A,#13,START; SPRAWDŹ CZY DZIELENIE
	SJMP DZIELENIE

DODAWANIE:
	MOV A, #'+'
	LCALL WRITE_DATA
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR
	POP 01H 
	POP ACC
	ADD A,R1; WYKONAJ DODAWANIE 
	MOV B, #10
	DIV AB
	SWAP A
	ADD A,B
	LCALL WRITE_HEX
	LCALL WAIT_ENTER_NW

ODEJMOWANIE:
	MOV A, #'-'
	LCALL WRITE_DATA
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR
	CLR C
	POP 01H 
	POP ACC
	SUBB A,R1; WYKONAJ ODEJMOWANIE
	MOV B, #10
	DIV AB
	SWAP A
	ADD A,B
	LCALL WRITE_HEX
	LCALL WAIT_ENTER_NW

MNOZENIE:
	MOV A, #'x'
	LCALL WRITE_DATA
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR
	POP B
	POP ACC
	MUL AB ; WYKONAJ MNOŻENIE
	XCH A,B
	LCALL WRITE_HEX
	XCH A,B
	LCALL WRITE_HEX
	LCALL WAIT_ENTER_NW

DZIELENIE:
	MOV A, #'/'
	LCALL WRITE_DATA
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR
	POP 01H; ZAPISZ MIANOWNIK
	MOV B,R1
	POP ACC
	DIV AB; WYKONAJ DZIELENIE
	MOV R2,B; ZAPISZ RESZTE Z DZIELENIA
	MOV B, #10
	DIV AB
	SWAP A
	ADD A,B
	LCALL WRITE_HEX; WYSWIETL CZESC CALKOWITA
	
	MOV A, #' '
	LCALL WRITE_DATA
	MOV A, R2
	MOV B, #10
	DIV AB
	SWAP A
	ADD A,B
	LCALL WRITE_HEX; WYSWIETL LICZNIK	
	MOV A, #'/'
	LCALL WRITE_DATA
	MOV A, R1
	MOV B, #10
	DIV AB
	SWAP A
	ADD A,B
	LCALL WRITE_HEX; WYSWIETL MIANOWNIK
	LCALL WAIT_ENTER_NW
	LCALL LCD_CLR

STOP:				;nie wykonuj innych dzia�a�
	LJMP	STOP	;- pozosta� w p�tli STOP
	NOP

